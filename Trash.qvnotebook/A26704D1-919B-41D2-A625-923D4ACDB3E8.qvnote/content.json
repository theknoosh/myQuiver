{
  "title": "Bug with exiting game early",
  "cells": [
    {
      "type": "text",
      "data": "Code below to end game if player is out of steam. Gives the player time to fall on burner before exiting."
    },
    {
      "type": "code",
      "language": "objectivec",
      "data": "if (_sharedGameData.steamLevel <= 0) {\n            int sVel = (int)self.steamBot.physicsBody.velocity.y; // Track how fast the ball is moving\n            if (sVel < 0) {\n                ballIsFalling = YES;\n            }\n            if (sVel == 0 && gameStarted && ballIsFalling) {\n                // Give player chance to fall on burner\n                if (!youLoseIsPlaying) {\n                    [self addChild:_YouLoseText];\n                    youLoseIsPlaying = YES;\n                    if(![self.runDownAudio playing]){\n                        self.runDownAudio = [self.audio playEffect:@\"runDown.mp3\"];\n                        [self.runDownAudio setVolume:4.0f];\n                    }\n                }\n                \n                // Wait for animation to complete\n                if (youLoseAnimationFinished) {\n                    // Exit to main menu\n                    ballIsFalling = NO;\n                    youLoseIsPlaying = NO;\n                    youLoseAnimationFinished = NO;\n                    _sharedGameData.canRestoreGame = NO;\n                    [self gamePause];\n                }\n                \n            }\n        }"
    },
    {
      "type": "text",
      "data": "Code below is what powers to Bot by using Steam"
    },
    {
      "type": "code",
      "language": "objectivec",
      "data": "if (_pulseOn && _sharedGameData.steamLevel > 0) { // Button down and there is steam in gauge\n        \n        self.steam.visible = YES;\n        \n        if (![self.liftOffAudio playing]) {\n            self.liftOffAudio = [self.audio playEffect:@\"BotSteam.mp3\" loop:YES];\n        }\n        \n        // reduce pressure\n        _sharedGameData.steamLevel -= .05 * delta;\n        if (_sharedGameData.steamLevel < 0) {\n            _sharedGameData.steamLevel = 0;\n        }\n        self.steamLevel.scaleY = _sharedGameData.steamLevel;\n        \n        if (_sharedGameData.steamLevel < .25f && thisIsTheFirstWarning) {\n            _arrow.rotation = 180.0f;\n            _arrow.position = ccp(230.0f, 475.0f);\n            _arrow.visible = YES;\n            [self.audio playEffect:@\"Woop Woop.mp3\"];\n            thisIsTheFirstWarning = NO;\n        }\n        \n\n        // Calculate sideways motion\n        float sideWaysPulse;\n        if (touch_X < 160) {\n            sideWaysPulse = touch_X - 160;\n        }else {\n            sideWaysPulse = -(160 - touch_X);\n        }\n        \n        [self.steamBot.physicsBody applyImpulse:CGPointMake(sideWaysPulse, 0.0)];\n        \n        if (mY.y < screenHeight/2) {\n            [self.steamBot.physicsBody applyImpulse:CGPointMake(0.0, 200.0)];\n        }else {\n\n            currentPhysicsPos.y -= 10.0;\n            currentBackgroundPos.y -= 10.0f * 0.8f;\n        }\n        \n    }else {\n        // _pulseOn is off or ball is out of steam\n        \n        self.steam.visible = NO;\n        \n        if ([self.liftOffAudio playing]) {\n            [self.liftOffAudio stop];\n            self.liftOffAudio = nil;\n            if ([self.burnerAudio playing]) {\n                [self.burnerAudio stop];\n                self.burnerAudio = nil;\n            }\n        }\n        \n        if (mY.y < screenHeight/2 && currentPhysicsPos.y < relativeBase) {\n            \n            currentPhysicsPos.y = -(self.steamBot.position.y - (screenHeight/2));\n\n            currentBackgroundPos.y = (-(self.steamBot.position.y - (screenHeight/2)))* 0.8f;\n\n            if (currentPhysicsPos.y > 0) {\n                currentPhysicsPos.y = 0;\n                currentBackgroundPos.y = 0;\n            }\n        }\n        static bool ballIsFalling = NO;\n        static bool youLoseIsPlaying = NO;\n        \n#pragma mark *** Player is out of steam ***\n        if (_sharedGameData.steamLevel <= 0) {\n            int sVel = (int)self.steamBot.physicsBody.velocity.y; // Track how fast the ball is moving\n            if (sVel < 0) {\n                ballIsFalling = YES;\n            }\n            if (sVel == 0 && gameStarted && ballIsFalling) {\n                // Give player chance to fall on burner\n                if (!youLoseIsPlaying) {\n                    [self addChild:_YouLoseText];\n                    youLoseIsPlaying = YES;\n                    if(![self.runDownAudio playing]){\n                        self.runDownAudio = [self.audio playEffect:@\"runDown.mp3\"];\n                        [self.runDownAudio setVolume:4.0f];\n                    }\n                }\n                \n                // Wait for animation to complete\n                if (youLoseAnimationFinished) {\n                    // Exit to main menu\n                    ballIsFalling = NO;\n                    youLoseIsPlaying = NO;\n                    youLoseAnimationFinished = NO;\n                    _sharedGameData.canRestoreGame = NO;\n                    [self gamePause];\n                }\n                \n            }\n        }\n    }"
    }
  ]
}